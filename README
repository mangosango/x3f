This project contains tools for manipulating X3F files from Sigma cameras.
See doc/readme.txt and doc/copyright.txt.

-------
COMPILE
-------

This project uses CMake and Homebrew for dependency management. To build the project, follow these steps:

1.  **Install Homebrew:** If you don't have Homebrew installed, you can install it by following the instructions on the [Homebrew website](https://brew.sh/).

2.  **Install Dependencies:** Install the required dependencies using Homebrew:

    ```bash
    brew install opencv libtiff zlib jpeg zstd xz tbb openblas
    ```

3.  **Build the Project:** Create a `build` directory and run CMake and make to build the project:

    ```bash
    mkdir build
    cd buil
    cmake ..
    make
    ```

    The executables will be located in the `build` directory.

-------
PORTABLE BUILD
-------

This project can be built to produce a portable binary of `x3f_extract` that includes all of its dependencies. This is useful for distributing the application.

To enable the portable build, you must have the static versions of the dependencies (OpenCV, libtiff, zlib) installed. The standard Homebrew formulas for these packages may not include static libraries. You may need to build them from source.

Once the static libraries are available, you can enable the portable build by setting the `PORTABLE` option with CMake:

    mkdir build
    cd build
    cmake .. -DPORTABLE=ON
    make

-----
TESTS
-----

The project includes a test suite that uses the `behave` testing framework. To run the tests, follow these steps:

1.  **Install Python Dependencies:** Install the required Python dependencies using pip:

    ```bash
    python3 -m venv venv
    . venv/bin/activate
    pip install -r requirements.txt
    ```

2.  **Run the Tests:** Run the `behave` command to run the tests:

    ```bash
    DIST_LOC=build/x3f_extract behave
